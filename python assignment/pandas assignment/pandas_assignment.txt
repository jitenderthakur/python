>>> import numpy as np
>>> import pandas as pd
>>> res=pd.read_csv("C:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python36-32\\prog\\pandas_assignment\\moviesdataset.csv",delimiter=",",encoding="cp1252",names=["id","name","year","raiting","duration"])

>>> res
          id  ... duraion
0          1  ...  4568.0
1          2  ...  4388.0
2          3  ...  9062.0
3          4  ...  6150.0
4          5  ...  5126.0
...      ...  ...     ...
35826  35821  ...  1338.0
35827  35822  ...  1336.0
35828  35823  ...  1339.0
35829  35824  ...  1310.0
35830  35825  ...     NaN

[35831 rows x 5 columns]

# ques1  Find the number of movies released between 1950 and 1960.

>>> res[(res["year"]>1950) & (res["year"] <1960)]
          id  ... duraion
93        94  ...  4491.0
97        98  ...  4828.0
99       100  ...  5087.0
315      316  ...  6036.0
401      402  ...  6115.0
...      ...  ...     ...
35630  35625  ...  1516.0
35631  35626  ...  1563.0
35632  35627  ...  1566.0
35633  35628  ...  1570.0
35640  35635  ...  1553.0

[411 rows x 5 columns]

////////////////////////////////////////////////////////////////////////////////////////////

#ques2 Find the number of movies having rating more than 4.

>>> res[res["raiting"]>4]
          id                                  name    year  raiting  duraion
138      139                          Pulp Fiction  1994.0      4.1   9265.0
287      288                     Life Is Beautiful  1997.0      4.2   6973.0
302      303                Mulan: Special Edition  1998.0      4.2   5270.0
464      465                          Forrest Gump  1994.0      4.3   8525.0
490      491                            Braveheart  1995.0      4.2  10658.0
...      ...                                   ...     ...      ...      ...
35437  35432                Black Butler: Season 2  2010.0      4.1      NaN
35612  35607  With Great Power: The Stan Lee Story  2010.0      4.1   4817.0
35619  35614                    Leverage: Season 5  2012.0      4.1      NaN
35661  35656                  Doc Martin: Series 5  2011.0      4.2      NaN
35807  35802                          End of Watch  2012.0      4.2   6527.0

[589 rows x 5 columns]

/////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ques3 Find the movies whose rating are between 3 and 4.

>>> res[(res["raiting"]>3) & (res["raiting"]<4)]
          id                            name    year  raiting  duraion
0          1  The Nightmare Before Christmas  1993.0      3.9   4568.0
1          2                       The Mummy  1932.0      3.5   4388.0
2          3            Orphans of the Storm  1921.0      3.2   9062.0
5          6             One Magic Christmas  1985.0      3.8   5333.0
6          7                Muriel's Wedding  1994.0      3.5   6323.0
...      ...                             ...     ...      ...      ...
35806  35801                      Kickin' It  2011.0      3.9      NaN
35808  35803       Gary Owen: The True Story  2012.0      3.8   3319.0
35822  35817            TEDTalks: Eco Enigma  2011.0      3.7      NaN
35823  35818   TEDTalks: Doctors on the Cusp  2011.0      3.6      NaN
35824  35819  TEDTalks: For All of Womankind  2011.0      3.6      NaN

[5559 rows x 5 columns]

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ques4 Find the number of movies with duration more than 2 hours (7200 second).


>>> res[res["duraion"]>7200 ]
          id                                   name    year  raiting  duraion
2          3                   Orphans of the Storm  1921.0      3.2   9062.0
12        13                  The Birth of a Nation  1915.0      2.9  12118.0
13        14                   The Boys from Brazil  1978.0      3.6   7417.0
20        21             Born on the Fourth of July  1989.0      3.4   8646.0
21        22                         Broadcast News  1987.0      3.4   7940.0
...      ...                                    ...     ...      ...      ...
34062  34057           Flying Swords of Dragon Gate  2012.0      3.7   7356.0
34083  34078                                 Marley  2012.0      4.3   8695.0
35129  35124                       The Genesis Code  2010.0      4.0   8276.0
35773  35768  WWE: Best of King of the Ring: Vol. 3  2011.0      NaN  11024.0
35774  35769  WWE: Best of King of the Ring: Vol. 2  2011.0      NaN   8628.0

[546 rows x 5 columns]

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ques5 Find the list of years and number of movies released each year.


>>> res.groupby(["year"]).aggregate({"year":[sum]})
          year
           sum
year          
1913      5739
1914     38280
1915      1915
1916      1916
1918      1918
1919      5757
1920     11520
1921      3842
1922      3844
1923      7692
1924      9620
1925      9625
1926      3852
1927      7708
1928      3856
1929      9645
1930      9650
1931      5793
1932      7728
1933     13531
1934     15472
1935     21285
1936     13552
1937      7748
1938      9690
1939     11634
1940     17460
1941     13587
1942      5826
1943     13601
1944     19440
1945     17505
1946     11676
1947     17523
1948     25324
1949     17541
1950     19500
1951     64383
1952     29280
1953     33201
1954     33218
1955     27370
1956    117360
1957    191786
1958    142934
1959    170433
1960    241080
1961    233359
1962    243288
1963    172744
1964    247464
1965    204360
1966    202498
1967    548793
1968    340464
1969    244156
1970    277770
1971    258201
1972    327352
1973    331464
1974    351372
1975    264650
1976    233168
1977    268872
1978    456918
1979    277060
1980    211860
1981    221872
1982    303246
1983    535410
1984    601152
1985    662990
1986    569982
1987    556360
1988    663992
1989    837369
1990    935300
1991    724724
1992    954168
1993   1124052
1994   1030898
1995   1181040
1996   1373248
1997   1573636
1998   1684314
1999   2360819
2000   1804000
2001   2347173
2002   2236234
2003   2802197
2004   2767524
2005   3883685
2006   4846496
2007   5804244
2008   6742864
2009   8942059
2010  10265070
2011  11082621
2012   8730068
2013   1974753
2014      2014

/////////////////////////////////////////////////////////////////////////////////////////

#ques6. Find the total number of movies in the dataset.

>>> res["id"].count()
35831
